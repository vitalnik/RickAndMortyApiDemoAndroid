plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'kotlin-kapt'
    id 'kotlin-parcelize'

    id 'dagger.hilt.android.plugin'

    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.10'

    id 'de.mannodermaus.android-junit5'
}

android {
    namespace 'com.example.rickandmorty'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.rickandmorty"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        debugConfig {
            storeFile file('debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            debuggable = true
            signingConfig signingConfigs.debugConfig
        }
        release {
            debuggable false
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debugConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.2'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
        exclude 'META-INF/INDEX.LIST'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            "-Xopt-in=kotlin.RequiresOptIn",
            "-Xopt-in=kotlinx.serialization.ExperimentalSerializationApi",
            "-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi",
            "-Xopt-in=androidx.compose.material3.ExperimentalMaterial3Api",
            "-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi"]
}

dependencies {

    def composeBom = platform('androidx.compose:compose-bom:2023.08.00')
    implementation composeBom
    androidTestImplementation composeBom
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.foundation:foundation'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    implementation "androidx.compose.animation:animation"
    implementation "androidx.compose.animation:animation-core"

    implementation "androidx.paging:paging-compose:3.2.1"

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.2")

    // lifecycle support
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Hilt
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0-alpha01"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // coil image loading
    implementation "io.coil-kt:coil-compose:2.2.2"

    // ktor
//    implementation "io.ktor:ktor-network-tls-certificates:$ktor_version"

    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"

    // accompanist
    //implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    // timber logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // ---------------------------------------------------------------
    // testing
    // ---------------------------------------------------------------
    testImplementation 'junit:junit:4.13.2'

    // JUnit5
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // mockk
    testImplementation 'io.mockk:mockk:1.13.4'

    // testing coroutines
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2'

}

apply plugin: "io.gitlab.arturbosch.detekt"

detekt {
    buildUponDefaultConfig = true
    config = files("$rootDir/config/detekt/detekt.yml")
    baseline = file("$projectDir/config/detekt/detekt-baseline.xml")
    basePath = rootDir
    parallel = true
}